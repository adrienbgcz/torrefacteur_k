import 'package:flutter/material.dart';
import 'package:torrefacteur_k/pages/ChampsPage.dart';
/*import 'package:provider/provider.dart';
import 'package:stock_management/providers/CustomersProvider.dart';
import 'package:stock_management/screen/widgets/AddButton.dart';

import 'package:stock_management/screen/widgets/SearchInput.dart';
import 'package:stock_management/service/customer-service.dart';

import '../../modal/Customer.dart';*/
import 'package:torrefacteur_k/widgets/ChampsList.dart';

import '../API/joueurService.dart';
import '../widgets/AddButton.dart';

class ExploitationPage extends StatefulWidget {
  const ExploitationPage({Key? key}) : super(key: key);

  @override
  State<ExploitationPage> createState() => _ExploitationPageState();
}

class _ExploitationPageState extends State<ExploitationPage> {

  @override
  Widget build(BuildContext context) {
    return FutureBuilder(
      future: getJoueurs(context),
      builder: (BuildContext context, AsyncSnapshot snapshot) {
        if (snapshot.connectionState == ConnectionState.done) {
          if (snapshot.data != null) {
            print(snapshot.data.prenom);
            return Column(children: [
              Padding(
                padding: const EdgeInsets.only(top: 10, left: 5, right: 5),
                child: Card(
                  color: Color(0xFF766C42),
                  elevation: 0,
                  shape: RoundedRectangleBorder(
                    side:
                    BorderSide(color: Color(0xFF766C42), width: 0.4),
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Center(
                    child: Padding(
                      padding: const EdgeInsets.only(top: 10, bottom: 10),
                      child: Text(
                          'Bonjour, ${snapshot.data.prenom} ! ðŸ‘‹           ${snapshot.data.dv} DV',
                          style: const TextStyle(
                              fontWeight: FontWeight.bold,
                              color: Colors.white)),
                    ),
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.only(top: 30, left: 5, right: 5),
                child: Container(
                  width: 300,
                  child: GestureDetector(
                    onTap: () {
                      Navigator.push(
                      context,
                      MaterialPageRoute(
                      builder: (context) => ChampsPage()));
                    },
                    child: Card(
                      color: Color(0xFFD8D8C1).withOpacity(0.3),
                      elevation: 0,
                      shape: RoundedRectangleBorder(
                        side: BorderSide(color: Color(0xFF766C42), width: 1),
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Padding(
                        padding: const EdgeInsets.all(40),
                        child: Column(
                          children: [
                            Text(
                              '${snapshot.data.exploitation.nom}',
                              style: TextStyle(
                                color: Colors.black,
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            SizedBox(height: 15),
                            Text(
                              'Specialite: ${snapshot.data.exploitation.specialite}',
                              style: TextStyle(color: Colors.black),
                            ),
                            // Add more data fields as needed
                          ],
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ]);
          } else if (snapshot.hasError) {
            print(snapshot.error);
            return Text("ERROR");
          } else {
            return CircularProgressIndicator();
          }
        } else {
          return Center(
              child:
              Text("Pas de d'exploitation correspondant Ã  votre recherche"));
        }
      },
    );
  }
}
